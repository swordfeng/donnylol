{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/idb/build/esm/index.js","webpack:///./node_modules/idb/build/esm/wrap-idb-value.js","webpack:///./src/rules.ts","webpack:///./src/sw.ts","webpack:///./src/swHandler.ts"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmE;AACN;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,yCAAyC,KAAK;AAC9E;AACA,wBAAwB,4DAAI;AAC5B;AACA;AACA,oBAAoB,4DAAI,sDAAsD,4DAAI;AAClF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,sBAAsB,EAAE;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,UAAU,KAAK;AACxC;AACA;AACA;AACA,WAAW,4DAAI;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAAY;AACZ;AACA;AACA;AACA,CAAC;;AAE2B;;;;;;;;;;;;;ACvF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","file":"sw.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/sw.ts\");\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","\nexport interface Rule {\n    keywords?: string[],\n    match?: string,\n    search: string,\n    suggestion?: string,\n    default?: string,\n}\n\ninterface RuleMatch {\n    rule: Rule,\n    keyword: string,\n    remainQuery: string,\n    match?: RegExpExecArray\n}\n\nfunction matchRule(query: string, rules: Rule[]): RuleMatch | null {\n    const spaceIdx = query.indexOf(' ');\n    const keyword = spaceIdx === -1 ? query : query.slice(0, spaceIdx);\n    const remainQuery = spaceIdx === -1 ? '' : query.slice(spaceIdx + 1);\n    for (const rule of rules) {\n        if (rule.keywords && rule.keywords.indexOf(keyword) !== -1) {\n            if (remainQuery || rule.default) {\n                return {rule, keyword, remainQuery};\n            }\n        }\n        if (rule.match) {\n            const match = new RegExp('^(?:' + rule.match + ')(?=$| )').exec(query);\n            if (match) {\n                const matchedQuery = query.slice(match[0].length + 1);\n                if (matchedQuery || rule.default) {\n                    return {rule, keyword: match[0], remainQuery: matchedQuery, match}\n                }\n            }\n        }\n        if (!rule.keywords && !rule.match) {\n            return {rule, keyword: '', remainQuery: query};\n        }\n    }\n    return null\n}\n\nexport function handleQuery(query: string, rules: Rule[]): string | null {\n    const ruleMatch = matchRule(query, rules)\n    if (!ruleMatch) return null\n    const {rule, keyword, remainQuery, match} = ruleMatch\n    if (!remainQuery && rule.default) {\n        return replaceUrl(rule.default, keyword, remainQuery, match)\n    }\n    return replaceUrl(rule.search, keyword, remainQuery, match)\n}\n\ntype SuggestionResult = [string, string[], any, any]\n\nexport async function handleSuggestion(query: string, rules: Rule[]): Promise<SuggestionResult> {\n    const ruleMatch = matchRule(query, rules)\n    if (!ruleMatch) return [query, [], [], []]\n    const {rule, keyword, remainQuery, match} = ruleMatch\n    if (!remainQuery || !rule.suggestion) return [query, [], [], []]\n    const suggestionUrl = replaceUrl(rule.suggestion, keyword, remainQuery, match)\n    const response = await fetch(new Request(suggestionUrl))\n    const result: SuggestionResult = await response.json()\n    if (result[0] !== remainQuery) return [query, [], [], []]\n    result[0] = query\n    result[1] = result[1].map(suggestion => `${keyword} ${suggestion}`)\n    return result\n}\n\nfunction replaceUrl(url: string, keyword: string, query: string, match?: RegExpExecArray) {\n    url = url.replace(/\\{keyword\\}/g, encodeURIComponent(keyword));\n    url = url.replace(/\\{query\\}/g, encodeURIComponent(query).replace(/%20/g, '+'));\n    if (match) {\n        for (let i = 1; i < match.length; i++) {\n            url = url.replace(new RegExp(`\\\\{${i}\\\\}`, 'g'), encodeURIComponent(match[i]));\n        }\n    }\n    return url;\n}","import { handleRequest, syncRules } from './swHandler'\n\nself.addEventListener('fetch', event => {\n    event.respondWith(handleRequest(event.request).catch(e => {\n        console.error(`Failed to handle request ${event.request.url}:`, e)\n        return fetch(event.request)\n    }))\n})\n\nself.addEventListener('periodicsync', event => {\n    event.waitUntil(syncRules().catch(e => {\n        console.error(`Failed to sync rules:`, e)\n    }));\n})","import { openDB, IDBPDatabase } from 'idb'\nimport { handleQuery, Rule } from './rules'\n\nconst DB_NAME = 'db'\nconst STORE_NAME = 'cached_rules'\nconst RULES_KEY = 'rules'\nconst UPDATE_TIME_KEY = 'update_time'\n\nexport async function handleRequest(request: Request): Promise<Response> {\n    const request_url = new URL(request.url)\n    if (request_url.pathname === '/') {\n        const rules = await fetchRules()\n        console.log(rules)\n        const query = request_url.searchParams.get(\"q\")\n        if (query) {\n            const redirect_url = handleQuery(query, rules)\n            if (redirect_url) return Response.redirect(redirect_url, 302)\n        }\n    }\n    return fetch(request)\n}\n\nasync function fetchRules(): Promise<Rule[]> {\n    const caches: IDBPDatabase<any> = await openDB(DB_NAME, 1, {\n        upgrade(db) {\n            db.createObjectStore(STORE_NAME)\n        },\n    })\n    let rules = null\n    try {\n        rules = JSON.parse(await caches.get(STORE_NAME, RULES_KEY))\n    } catch (e) {\n        // pass\n    }\n    if (!rules) {\n        rules = await syncRules()\n    } else {\n        const update_time = await caches.get(STORE_NAME, UPDATE_TIME_KEY)\n        if (Date.now() - update_time > 30000) {\n            syncRules()\n        }\n    }\n    return rules\n}\n\nexport async function syncRules(): Promise<Rule[]> {\n    const request = new Request('/rules.json')\n    const response = await fetch(request, {credentials: 'include'})\n    if (!response.ok) throw new Error('no rules available')\n    const rules = response.json()\n    const caches: IDBPDatabase<any> = await openDB(DB_NAME, 1, {\n        upgrade(db) {\n            db.createObjectStore(STORE_NAME)\n        },\n    })\n    const rules_to_store = JSON.stringify(rules)\n    console.log(rules_to_store)\n    await caches.put(STORE_NAME, rules_to_store, RULES_KEY)\n    await caches.put(STORE_NAME, Date.now(), UPDATE_TIME_KEY)\n    console.log('Rules sync complete')\n    return rules\n}"],"sourceRoot":""}